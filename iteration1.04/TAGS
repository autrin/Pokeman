
1.04.c,4525
#define MAP_WIDTH 13,218
#define MAP_HEIGHT 14,263
#define NUM_REGIONS 15,309
#define WORLD_HEIGHT 16,355
#define WORLD_WIDTH 17,408
#define SHRT_MAX 18,432
#define mapxy(19,462
char symbols[symbols23,522
typedef struct path25,597
    heap_node_t* hn;27,619
    uint8_t pos[pos28,640
    uint8_t from[from29,660
    int32_t cost;30,681
} path_t;31,699
struct Region34,754
    int32_t fromX,36,770
    int32_t fromX, fromY,36,770
    int32_t fromX, fromY, toX,36,770
    int32_t fromX, fromY, toX, toY;36,770
    char symbol;37,806
    int x,43,889
    int x, y;43,889
} Position;44,903
Position validPositionsForBuildings[validPositionsForBuildings46,916
int validPositionsCount 47,1004
typedef int16_t pair_t[pair_t49,1119
typedef struct map51,1147
    char m[m53,1168
    int topExit,54,1203
    int topExit, bottomExit,54,1203
    int topExit, bottomExit, leftExit,54,1203
    int topExit, bottomExit, leftExit, rightExit;54,1203
} map_t;55,1253
typedef struct pc57,1263
    int32_t x;59,1317
    int32_t y;60,1332
    heap_node_t* heap_node;61,1347
} pc_t;62,1375
    PC,66,1425
    Hiker,67,1433
    Rival,68,1444
    Swimmer,69,1455
    Other,70,1468
    Num_Character_Types 71,1479
} CharacterType;72,1551
static Position directions[directions75,1618
typedef struct character 78,1726
    int32_t x,79,1753
    int32_t x, y;79,1753
    uint32_t next_turn;80,1783
    uint32_t sequence_number;81,1807
    CharacterType type;82,1837
    char symbol;83,1861
    heap_node_t* heap_node;84,1878
    uint32_t direction;85,1906
} character_t;86,1930
typedef struct world88,1946
    map_t* w[w90,1969
    int32_t curX;91,2010
    int32_t curY;92,2052
    character_t pc;93,2094
    int hikerDist[hikerDist94,2114
    int rivalDist[rivalDist95,2156
    character_t* npcs[npcs96,2198
    int npc_count;97,2245
} world_t;98,2264
world_t world;100,2276
uint32_t global_sequence_number;102,2292
    BOULDER,107,2386
    BOULDER, TREE,107,2386
    BOULDER, TREE, PATH,107,2386
    BOULDER, TREE, PATH, MART,107,2386
    BOULDER, TREE, PATH, MART, CENTER,107,2386
    BOULDER, TREE, PATH, MART, CENTER, GRASS,107,2386
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING,107,2386
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN,107,2386
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST,107,2386
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST, WATER,107,2386
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST, WATER, GATE,107,2386
    Num_Terrain_Types 108,2473
} TerrainType;109,2541
int32_t cost[cost112,2627
int32_t get_cost(121,3264
heap_t event_heap;164,4334
int32_t characters_turn_comp(166,4354
character_t* create_character(171,4714
bool is_position_valid_for_npc(188,5260
Position find_valid_position_for_npc(236,7131
void update_character_turn(246,7444
void generate_npcs(257,7876
void reinsert_into_event_heap(297,9481
character_t* character_at_position(309,9893
void update_map(371,12309
void move_character(380,12627
void move_pacer(403,13399
void move_wanderer(421,14287
void move_towards_player_hiker(447,15413
void move_towards_player_rival(478,16676
void move_explorer(508,17932
void move_swimmer(528,18855
void move_npc(559,20201
void move_character_with_collision(598,21109
void addValidPosition(610,21712
void collectValidPositions(618,21985
void world_init(636,22416
void createBorder(652,22818
void initializeRegions(679,23364
void assignRegions(687,23545
    float x,761,26142
    float x, y;761,26142
} Vector2D;762,26158
    Vector2D grad[grad765,26188
} GradientGrid;766,26257
float lerp(769,26298
float smoothstep(774,26417
float dot(779,26511
Vector2D randomGradient(784,26621
float perlinNoise(793,26838
TerrainType terrainTypeBasedOnNoiseValue(825,27929
void generateTerrainWithNoise(843,28251
void setRegionCoordinates(882,29479
void createMap(894,29981
void createSingleCenterOrMart(919,30625
void createCC(953,31788
void createPokemart(958,31855
void printMap(963,31928
void sprinkle(975,32134
void createPaths(994,32727
character_t* create_pc(1110,36754
static int32_t compRival(1125,37134
static int32_t compHiker(1128,37369
void dijkstra(1134,37684
void printHiker_RivalMap(1322,47760
void freeMap(1350,48514
void freeAllMaps(1359,48790
void cleanup_characters(1370,49004
void render_game_state(1381,49332
void newMapCaller(1412,50564
int main(1484,53819

heap.c,574
struct heap_node8,99
    heap_node_t* next;10,118
    heap_node_t* prev;11,141
    heap_node_t* parent;12,164
    heap_node_t* child;13,189
    uint32_t degree;14,213
    uint32_t mark;15,234
    void* data;16,253
#define swap(19,273
void heap_init(25,389
heap_node_t* heap_insert(32,598
static void heap_link(55,1066
static void heap_consolidate(77,1546
void* heap_remove_min(131,2857
static void heap_cut(165,3763
static void heap_cascading_cut(190,4206
int heap_decrease_key_no_replace(208,4496
void heap_node_delete(230,5084
void heap_delete(251,5454

heap.h,274
#define HEAP_H2,15
    typedef struct heap_node heap_node_t;11,113
    typedef struct heap13,156
        heap_node_t* min;15,186
        uint32_t size;16,212
        int32_t(*compare)compare17,235
        void (*datum_delete)datum_delete18,297
    } heap_t;19,334
