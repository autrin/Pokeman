
1.04.c,4439
#define MAP_WIDTH 13,218
#define MAP_HEIGHT 14,263
#define NUM_REGIONS 15,309
#define WORLD_HEIGHT 16,355
#define WORLD_WIDTH 17,408
#define SHRT_MAX 18,432
#define mapxy(19,462
char symbols[symbols23,522
typedef struct path25,597
    heap_node_t* hn;27,619
    uint8_t pos[pos28,640
    uint8_t from[from29,660
    int32_t cost;30,681
} path_t;31,699
struct Region34,754
    int32_t fromX,36,770
    int32_t fromX, fromY,36,770
    int32_t fromX, fromY, toX,36,770
    int32_t fromX, fromY, toX, toY;36,770
    char symbol;37,806
    int x,43,889
    int x, y;43,889
} Position;44,903
Position validPositionsForBuildings[validPositionsForBuildings46,916
int validPositionsCount 47,1004
typedef int16_t pair_t[pair_t49,1119
typedef struct map51,1147
    char m[m53,1168
    int topExit,54,1203
    int topExit, bottomExit,54,1203
    int topExit, bottomExit, leftExit,54,1203
    int topExit, bottomExit, leftExit, rightExit;54,1203
} map_t;55,1253
typedef struct pc57,1263
    int32_t x;59,1317
    int32_t y;60,1332
    heap_node_t* heap_node;61,1347
} pc_t;62,1375
    PC,66,1425
    Hiker,67,1433
    Rival,68,1444
    Swimmer,69,1455
    Other,70,1468
    Num_Character_Types 71,1479
} CharacterType;72,1551
static Position directions[directions75,1618
typedef struct character 77,1725
    int32_t x,78,1752
    int32_t x, y;78,1752
    uint32_t next_turn;79,1782
    uint32_t sequence_number;80,1806
    CharacterType type;81,1836
    char symbol;82,1860
    heap_node_t* heap_node;83,1877
    uint32_t direction;84,1905
} character_t;85,1929
typedef struct world87,1945
    map_t* w[w89,1968
    int32_t curX;90,2009
    int32_t curY;91,2051
    character_t pc;92,2093
    int hikerDist[hikerDist93,2113
    int rivalDist[rivalDist94,2155
    character_t* npcs[npcs95,2197
    int npc_count;96,2244
} world_t;97,2263
world_t world;99,2275
uint32_t global_sequence_number;101,2291
    BOULDER,106,2385
    BOULDER, TREE,106,2385
    BOULDER, TREE, PATH,106,2385
    BOULDER, TREE, PATH, MART,106,2385
    BOULDER, TREE, PATH, MART, CENTER,106,2385
    BOULDER, TREE, PATH, MART, CENTER, GRASS,106,2385
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING,106,2385
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN,106,2385
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST,106,2385
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST, WATER,106,2385
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST, WATER, GATE,106,2385
    Num_Terrain_Types 107,2472
} TerrainType;108,2540
int32_t cost[cost111,2626
int32_t get_cost(120,3263
heap_t event_heap;163,4333
int32_t characters_turn_comp(165,4353
character_t* create_character(170,4713
bool is_position_valid_for_npc(187,5252
Position find_valid_position_for_npc(235,7261
void update_character_turn(245,7574
void generate_npcs(256,8006
character_t* character_at_position(308,10097
void update_map(326,10664
void move_character(335,11070
void move_pacer(357,11883
void move_wanderer(375,12872
void move_towards_player_hiker(403,14116
void move_towards_player_rival(438,15501
void move_explorer(472,16875
void move_swimmer(497,17888
void move_npc(530,19277
void addValidPosition(585,21163
void collectValidPositions(593,21436
void world_init(611,21867
void createBorder(627,22315
void initializeRegions(654,22861
void assignRegions(662,23042
    float x,736,25639
    float x, y;736,25639
} Vector2D;737,25655
    Vector2D grad[grad740,25685
} GradientGrid;741,25754
float lerp(744,25795
float smoothstep(749,25914
float dot(754,26008
Vector2D randomGradient(759,26118
float perlinNoise(768,26335
TerrainType terrainTypeBasedOnNoiseValue(800,27426
void generateTerrainWithNoise(818,27748
void setRegionCoordinates(857,28976
void createMap(869,29478
void createSingleCenterOrMart(894,30122
void createCC(928,31285
void createPokemart(933,31352
void printMap(938,31425
void sprinkle(950,31631
void createPaths(969,32224
character_t* create_pc(1094,36549
static int32_t compRival(1109,36929
static int32_t compHiker(1112,37164
void dijkstra(1118,37479
void printHiker_RivalMap(1306,47555
void freeMap(1334,48309
void freeAllMaps(1343,48585
void cleanup_characters(1354,48799
void render_game_state(1365,49119
void newMapCaller(1396,50351
int main(1466,53590

heap.c,574
struct heap_node8,99
    heap_node_t* next;10,118
    heap_node_t* prev;11,141
    heap_node_t* parent;12,164
    heap_node_t* child;13,189
    uint32_t degree;14,213
    uint32_t mark;15,234
    void* data;16,253
#define swap(19,273
void heap_init(25,389
heap_node_t* heap_insert(32,598
static void heap_link(55,1066
static void heap_consolidate(77,1545
void* heap_remove_min(131,2926
static void heap_cut(165,3832
static void heap_cascading_cut(190,4275
int heap_decrease_key_no_replace(208,4565
void heap_node_delete(230,5153
void heap_delete(251,5523

heap.h,274
#define HEAP_H2,15
    typedef struct heap_node heap_node_t;11,113
    typedef struct heap13,156
        heap_node_t* min;15,186
        uint32_t size;16,212
        int32_t(*compare)compare17,235
        void (*datum_delete)datum_delete18,297
    } heap_t;19,334
