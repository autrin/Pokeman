
1.04.c,4505
#define MAP_WIDTH 13,218
#define MAP_HEIGHT 14,263
#define NUM_REGIONS 15,309
#define WORLD_HEIGHT 16,355
#define WORLD_WIDTH 17,408
#define SHRT_MAX 18,432
#define mapxy(19,462
char symbols[symbols23,522
typedef struct path25,597
    heap_node_t* hn;27,619
    uint8_t pos[pos28,640
    uint8_t from[from29,660
    int32_t cost;30,681
} path_t;31,699
struct Region34,754
    int32_t fromX,36,770
    int32_t fromX, fromY,36,770
    int32_t fromX, fromY, toX,36,770
    int32_t fromX, fromY, toX, toY;36,770
    char symbol;37,806
    int x,43,889
    int x, y;43,889
} Position;44,903
Position validPositionsForBuildings[validPositionsForBuildings46,916
int validPositionsCount 47,1004
typedef int16_t pair_t[pair_t49,1119
typedef struct map51,1147
    char m[m53,1168
    int topExit,54,1203
    int topExit, bottomExit,54,1203
    int topExit, bottomExit, leftExit,54,1203
    int topExit, bottomExit, leftExit, rightExit;54,1203
} map_t;55,1253
typedef struct pc57,1263
    int32_t x;59,1317
    int32_t y;60,1332
    heap_node_t* heap_node;61,1347
} pc_t;62,1375
    PC,66,1425
    Hiker,67,1433
    Rival,68,1444
    Swimmer,69,1455
    Other,70,1468
    Num_Character_Types 71,1479
} CharacterType;72,1551
static Position directions[directions74,1569
typedef struct character 85,1709
    int32_t x,86,1736
    int32_t x, y;86,1736
    uint32_t next_turn;87,1766
    uint32_t sequence_number;88,1790
    CharacterType type;89,1820
    char symbol;90,1844
    heap_node_t* heap_node;91,1861
    uint32_t direction;92,1889
} character_t;93,1913
typedef struct world95,1929
    map_t* w[w97,1952
    int32_t curX;98,1993
    int32_t curY;99,2035
    character_t pc;100,2077
    int hikerDist[hikerDist101,2097
    int rivalDist[rivalDist102,2139
    character_t* npcs[npcs103,2181
    int npc_count;104,2228
} world_t;105,2247
world_t world;107,2259
uint32_t global_sequence_number;109,2275
    BOULDER,114,2369
    BOULDER, TREE,114,2369
    BOULDER, TREE, PATH,114,2369
    BOULDER, TREE, PATH, MART,114,2369
    BOULDER, TREE, PATH, MART, CENTER,114,2369
    BOULDER, TREE, PATH, MART, CENTER, GRASS,114,2369
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING,114,2369
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN,114,2369
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST,114,2369
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST, WATER,114,2369
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST, WATER, GATE,114,2369
    Num_Terrain_Types 115,2456
} TerrainType;116,2524
int32_t cost[cost119,2610
int32_t get_cost(128,3247
heap_t event_heap;171,4317
int32_t characters_turn_comp(173,4337
character_t* create_character(178,4697
bool is_position_valid_for_npc(195,5243
Position find_valid_position_for_npc(243,7078
void generate_npcs(252,7326
void reinsert_into_event_heap(290,8896
character_t* character_at_position(302,9308
void move_character(321,9876
void move_pacer(364,11613
void move_wanderer(382,12501
void move_towards_player_hiker(394,12980
void move_towards_player_rival(420,13976
void move_explorer(445,14965
void move_swimmer(459,15567
void move_npc(488,16751
void move_character_with_collision(527,17659
void addValidPosition(539,18262
void collectValidPositions(547,18535
void world_init(565,18966
void createBorder(581,19368
void initializeRegions(608,19914
void assignRegions(616,20095
    float x,690,22692
    float x, y;690,22692
} Vector2D;691,22708
    Vector2D grad[grad694,22738
} GradientGrid;695,22807
float lerp(698,22848
float smoothstep(703,22967
float dot(708,23061
Vector2D randomGradient(713,23171
float perlinNoise(722,23388
TerrainType terrainTypeBasedOnNoiseValue(754,24479
void generateTerrainWithNoise(772,24801
void setRegionCoordinates(811,26029
void createMap(823,26531
void createSingleCenterOrMart(848,27175
void createCC(882,28338
void createPokemart(887,28405
void printMap(892,28478
void sprinkle(904,28684
void createPaths(923,29277
character_t* create_pc(1039,33304
static int32_t compRival(1054,33684
static int32_t compHiker(1057,33919
void dijkstra(1063,34234
void printHiker_RivalMap(1251,44310
void freeMap(1279,45064
void freeAllMaps(1288,45340
void cleanup_characters(1299,45554
void render_game_state(1310,45882
void update_character_turn(1319,46085
void newMapCaller(1342,47064
int main(1414,50319

heap.c,574
struct heap_node8,99
    heap_node_t* next;10,118
    heap_node_t* prev;11,141
    heap_node_t* parent;12,164
    heap_node_t* child;13,189
    uint32_t degree;14,213
    uint32_t mark;15,234
    void* data;16,253
#define swap(19,273
void heap_init(25,389
heap_node_t* heap_insert(32,598
static void heap_link(55,1066
static void heap_consolidate(77,1546
void* heap_remove_min(131,2857
static void heap_cut(165,3763
static void heap_cascading_cut(190,4206
int heap_decrease_key_no_replace(208,4496
void heap_node_delete(230,5084
void heap_delete(251,5454

heap.h,274
#define HEAP_H2,15
    typedef struct heap_node heap_node_t;11,113
    typedef struct heap13,156
        heap_node_t* min;15,186
        uint32_t size;16,212
        int32_t(*compare)compare17,235
        void (*datum_delete)datum_delete18,297
    } heap_t;19,334
