
1.04.c,4443
#define MAP_WIDTH 13,218
#define MAP_HEIGHT 14,263
#define NUM_REGIONS 15,309
#define WORLD_HEIGHT 16,355
#define WORLD_WIDTH 17,408
#define SHRT_MAX 18,432
#define mapxy(19,462
char symbols[symbols23,522
typedef struct path25,597
    heap_node_t* hn;27,619
    uint8_t pos[pos28,640
    uint8_t from[from29,660
    int32_t cost;30,681
} path_t;31,699
struct Region34,754
    int32_t fromX,36,770
    int32_t fromX, fromY,36,770
    int32_t fromX, fromY, toX,36,770
    int32_t fromX, fromY, toX, toY;36,770
    char symbol;37,806
    int x,43,889
    int x, y;43,889
} Position;44,903
Position validPositionsForBuildings[validPositionsForBuildings46,916
int validPositionsCount 47,1004
typedef int16_t pair_t[pair_t49,1119
typedef struct map51,1147
    char m[m53,1168
    int topExit,54,1203
    int topExit, bottomExit,54,1203
    int topExit, bottomExit, leftExit,54,1203
    int topExit, bottomExit, leftExit, rightExit;54,1203
} map_t;55,1253
typedef struct pc57,1263
    int32_t x;59,1317
    int32_t y;60,1332
    heap_node_t* heap_node;61,1347
} pc_t;62,1375
    PC,66,1425
    Hiker,67,1433
    Rival,68,1444
    Swimmer,69,1455
    Other,70,1468
    Num_Character_Types 71,1479
} CharacterType;72,1551
static Position directions[directions75,1618
typedef struct character 77,1725
    int32_t x,78,1752
    int32_t x, y;78,1752
    uint32_t next_turn;79,1782
    uint32_t sequence_number;80,1806
    CharacterType type;81,1836
    char symbol;82,1860
    heap_node_t* heap_node;83,1877
    uint32_t direction;84,1905
} character_t;85,1929
typedef struct world87,1945
    map_t* w[w89,1968
    int32_t curX;90,2009
    int32_t curY;91,2051
    character_t pc;92,2093
    int hikerDist[hikerDist93,2113
    int rivalDist[rivalDist94,2155
    character_t* npcs[npcs95,2197
    int npc_count;96,2244
    uint32_t global_sequence_number;97,2263
} world_t;99,2302
world_t world;101,2314
    BOULDER,106,2370
    BOULDER, TREE,106,2370
    BOULDER, TREE, PATH,106,2370
    BOULDER, TREE, PATH, MART,106,2370
    BOULDER, TREE, PATH, MART, CENTER,106,2370
    BOULDER, TREE, PATH, MART, CENTER, GRASS,106,2370
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING,106,2370
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN,106,2370
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST,106,2370
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST, WATER,106,2370
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST, WATER, GATE,106,2370
    Num_Terrain_Types 107,2457
} TerrainType;108,2525
int32_t cost[cost111,2611
int32_t get_cost(120,3248
heap_t event_heap;163,4318
int32_t characters_turn_comp(165,4338
character_t* create_character(170,4698
bool is_position_valid_for_npc(187,5243
Position find_valid_position_for_npc(235,7252
void update_character_turn(245,7565
void generate_npcs(256,7997
character_t* character_at_position(308,10088
void update_map(326,10655
void move_character(335,11061
void move_pacer(357,11874
void move_wanderer(375,12863
void move_towards_player_hiker(403,14107
void move_towards_player_rival(438,15492
void move_explorer(472,16866
void move_swimmer(497,17879
void move_npc(532,19319
void addValidPosition(587,21205
void collectValidPositions(595,21478
void world_init(613,21909
void createBorder(629,22363
void initializeRegions(656,22909
void assignRegions(664,23090
    float x,738,25687
    float x, y;738,25687
} Vector2D;739,25703
    Vector2D grad[grad742,25733
} GradientGrid;743,25802
float lerp(746,25843
float smoothstep(751,25962
float dot(756,26056
Vector2D randomGradient(761,26166
float perlinNoise(770,26383
TerrainType terrainTypeBasedOnNoiseValue(802,27474
void generateTerrainWithNoise(820,27796
void setRegionCoordinates(859,29024
void createMap(871,29526
void createSingleCenterOrMart(896,30170
void createCC(930,31333
void createPokemart(935,31400
void printMap(940,31473
void sprinkle(952,31679
void createPaths(971,32272
character_t* create_pc(1096,36597
static int32_t compRival(1111,36977
static int32_t compHiker(1114,37212
void dijkstra(1120,37527
void printHiker_RivalMap(1308,47603
void freeMap(1336,48357
void freeAllMaps(1345,48633
void cleanup_characters(1356,48847
void render_game_state(1367,49167
void newMapCaller(1398,50399
int main(1468,53638

heap.c,574
struct heap_node8,99
    heap_node_t* next;10,118
    heap_node_t* prev;11,141
    heap_node_t* parent;12,164
    heap_node_t* child;13,189
    uint32_t degree;14,213
    uint32_t mark;15,234
    void* data;16,253
#define swap(19,273
void heap_init(25,389
heap_node_t* heap_insert(32,598
static void heap_link(55,1066
static void heap_consolidate(77,1545
void* heap_remove_min(131,2926
static void heap_cut(165,3832
static void heap_cascading_cut(190,4275
int heap_decrease_key_no_replace(208,4565
void heap_node_delete(230,5153
void heap_delete(251,5523

heap.h,274
#define HEAP_H2,15
    typedef struct heap_node heap_node_t;11,113
    typedef struct heap13,156
        heap_node_t* min;15,186
        uint32_t size;16,212
        int32_t(*compare)compare17,235
        void (*datum_delete)datum_delete18,297
    } heap_t;19,334
