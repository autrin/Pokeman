
1.04.c,4363
#define MAP_WIDTH 13,218
#define MAP_HEIGHT 14,263
#define NUM_REGIONS 15,309
#define WORLD_HEIGHT 16,355
#define WORLD_WIDTH 17,408
#define SHRT_MAX 18,432
#define mapxy(19,462
char symbols[symbols23,522
typedef struct path25,597
    heap_node_t* hn;27,619
    uint8_t pos[pos28,640
    uint8_t from[from29,660
    int32_t cost;30,681
} path_t;31,699
struct Region34,754
    int32_t fromX,36,770
    int32_t fromX, fromY,36,770
    int32_t fromX, fromY, toX,36,770
    int32_t fromX, fromY, toX, toY;36,770
    char symbol;37,806
    int x,43,889
    int x, y;43,889
} Position;44,903
Position validPositionsForBuildings[validPositionsForBuildings46,916
int validPositionsCount 47,1004
typedef int16_t pair_t[pair_t49,1119
typedef struct map51,1147
    char m[m53,1168
    int topExit,54,1203
    int topExit, bottomExit,54,1203
    int topExit, bottomExit, leftExit,54,1203
    int topExit, bottomExit, leftExit, rightExit;54,1203
} map_t;55,1253
typedef struct pc57,1263
    int32_t x;59,1317
    int32_t y;60,1332
    heap_node_t* heap_node;61,1347
} pc_t;62,1375
    PC,66,1425
    Hiker,67,1433
    Rival,68,1444
    Swimmer,69,1455
    Other,70,1468
    Num_Character_Types 71,1479
} CharacterType;72,1551
static Position directions[directions75,1618
typedef struct character 77,1725
    int32_t x,78,1752
    int32_t x, y;78,1752
    uint32_t next_turn;79,1782
    uint32_t sequence_number;80,1806
    CharacterType type;81,1836
    char symbol;82,1860
    heap_node_t* heap_node;83,1877
    uint32_t direction;84,1905
} character_t;85,1929
typedef struct world87,1945
    map_t* w[w89,1968
    int32_t curX;90,2009
    int32_t curY;91,2051
    character_t pc;92,2093
    int hikerDist[hikerDist93,2113
    int rivalDist[rivalDist94,2155
    character_t* npcs[npcs96,2247
    int npc_count;97,2293
    uint32_t global_sequence_number;98,2312
} world_t;100,2350
world_t world;102,2362
    BOULDER,107,2418
    BOULDER, TREE,107,2418
    BOULDER, TREE, PATH,107,2418
    BOULDER, TREE, PATH, MART,107,2418
    BOULDER, TREE, PATH, MART, CENTER,107,2418
    BOULDER, TREE, PATH, MART, CENTER, GRASS,107,2418
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING,107,2418
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN,107,2418
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST,107,2418
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST, WATER,107,2418
    BOULDER, TREE, PATH, MART, CENTER, GRASS, CLEARING, MOUNTAIN, FOREST, WATER, GATE,107,2418
    Num_Terrain_Types 108,2505
} TerrainType;109,2573
int32_t cost[cost112,2659
int32_t get_cost(121,3296
heap_t event_heap;164,4366
int32_t characters_turn_comp(166,4386
character_t* create_character(171,4746
bool is_position_valid_for_npc(188,5291
Position find_valid_position_for_npc(236,7255
void update_character_turn(246,7568
void generate_npcs(257,8000
void update_map(330,10858
void move_character(342,11277
void move_pacer(368,12265
void move_wanderer(386,13254
void move_towards_player_hiker(414,14490
void move_towards_player_rival(449,15867
void move_explorer(483,17241
void move_swimmer(508,18254
void move_npc(543,19693
void addValidPosition(598,21567
void collectValidPositions(606,21840
void world_init(624,22271
void createBorder(640,22725
void initializeRegions(667,23271
void assignRegions(675,23452
    float x,749,26049
    float x, y;749,26049
} Vector2D;750,26065
    Vector2D grad[grad753,26095
} GradientGrid;754,26164
float lerp(757,26205
float smoothstep(762,26324
float dot(767,26418
Vector2D randomGradient(772,26528
float perlinNoise(781,26745
TerrainType terrainTypeBasedOnNoiseValue(813,27836
void generateTerrainWithNoise(831,28158
void setRegionCoordinates(870,29386
void createMap(882,29888
void createSingleCenterOrMart(907,30532
void createCC(941,31695
void createPokemart(946,31762
void printMap(951,31835
void sprinkle(968,32184
void createPaths(987,32777
character_t* create_pc(1112,37102
static int32_t compRival(1127,37482
static int32_t compHiker(1130,37717
void dijkstra(1136,38032
void printHiker_RivalMap(1324,48108
void freeMap(1352,48862
void freeAllMaps(1361,49138
void cleanup_characters(1372,49352
void newMapCaller(1407,50725
int main(1477,53964

heap.c,574
struct heap_node8,99
    heap_node_t* next;10,118
    heap_node_t* prev;11,141
    heap_node_t* parent;12,164
    heap_node_t* child;13,189
    uint32_t degree;14,213
    uint32_t mark;15,234
    void* data;16,253
#define swap(19,273
void heap_init(25,389
heap_node_t* heap_insert(32,598
static void heap_link(55,1066
static void heap_consolidate(77,1545
void* heap_remove_min(131,2926
static void heap_cut(165,3832
static void heap_cascading_cut(190,4275
int heap_decrease_key_no_replace(208,4565
void heap_node_delete(230,5153
void heap_delete(251,5523

heap.h,274
#define HEAP_H2,15
    typedef struct heap_node heap_node_t;11,113
    typedef struct heap13,156
        heap_node_t* min;15,186
        uint32_t size;16,212
        int32_t(*compare)compare17,235
        void (*datum_delete)datum_delete18,297
    } heap_t;19,334
